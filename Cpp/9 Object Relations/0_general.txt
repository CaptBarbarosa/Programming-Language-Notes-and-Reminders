Const objects are not mutable.
We can call only const member functions of a const object.

friend keyword is used when an external function or class needs to access private 
members, friend declaration is used to grant access.

        Relations
--> Aggragate ("has a"): If class A and B are aggregates, class A can have 0 or more instance of clss B. 
Lifetime of B are INDEPENDENT of class A.
--> Composition ("has a"): Class A has 0 or more instance of class B.
And the lifetime of class B objects depend on the class A object.
--> Generalization (inheritance "is a")


Members of the subclass hides member of the superclass with the same name.

class A{
    private:
        int a;
    public:
        A(int a_given){a = a_given;}
}

class B: public A{
    private:
        int x;
    public: //This is how you construct a subclass.
    B(int a_given, x_given):A(a_given){x = x_given;}
}

Multiple inheritence is also possible

--> class Circle: public Shape, public ShapeAttr


If a base class is inherited by multiple classes we use virtual keywords. 
Virtual keyword is for subclasses.
